# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-14 10:36
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('url', models.CharField(max_length=150)),
                ('list_class', models.CharField(max_length=150)),
                ('icon_class', models.CharField(max_length=150)),
                ('sort_order', models.PositiveSmallIntegerField(default=0)),
                ('parent_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usermodule.MenuItem')),
            ],
        ),
        migrations.CreateModel(
            name='MenuRoleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_map_menu', to='usermodule.MenuItem')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationDataAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=150)),
                ('parent_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_org', to='usermodule.Organizations')),
            ],
        ),
        migrations.CreateModel(
            name='UserFailedLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('login_attempt_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserModuleProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expired', models.DateTimeField()),
                ('admin', models.BooleanField(default=False)),
                ('employee_id', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('organisation_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usermodule.Organizations')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('password', models.CharField(max_length=150)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UserRoleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_user_role', to='usermodule.OrganizationRole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usermodule_role', to='usermodule.UserModuleProfile')),
            ],
        ),
        migrations.AddField(
            model_name='organizationrole',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_organization_name', to='usermodule.Organizations'),
        ),
        migrations.AddField(
            model_name='organizationdataaccess',
            name='observable_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_observable_organization', to='usermodule.Organizations'),
        ),
        migrations.AddField(
            model_name='organizationdataaccess',
            name='observer_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_observer_organization', to='usermodule.Organizations'),
        ),
        migrations.AddField(
            model_name='menurolemap',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_map_role', to='usermodule.OrganizationRole'),
        ),
        migrations.AlterUniqueTogether(
            name='userrolemap',
            unique_together=set([('user', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='organizationrole',
            unique_together=set([('organization', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='organizationdataaccess',
            unique_together=set([('observer_organization', 'observable_organization')]),
        ),
        migrations.AlterUniqueTogether(
            name='menurolemap',
            unique_together=set([('role', 'menu')]),
        ),
    ]
